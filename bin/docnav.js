#! /usr/bin/env node
// Generated by CoffeeScript 1.3.3
(function() {
  var argv, fs, getFileAsString, item, iterator, key, nav, src, titleCase, writeIndex, x, yml;

  fs = require('fs');

  yml = require('js-yaml');

  argv = require('optimist').usage('Create a DocPad directory structure based off of a yaml navigation').demand('d').describe('d', '/src/documents directory').demand('n').describe('n', 'Location of Nav File').argv;

  src = argv.d;

  nav = argv.n;

  getFileAsString = function(filePath) {
    fs = require("fs");
    return fs.readFileSync(filePath, "utf-8");
  };

  titleCase = function(x) {
    x = x.replace(/-/g, ' ');
    return x.replace(/\w\S*/g, function(txt) {
      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
    });
  };

  writeIndex = function(cwd, title) {
    var meta;
    meta = "---\nlayout: 'default'\ntitle: '" + title + "'\nnav_title: '" + title + "'\n---";
    return fs.writeFile(cwd + '/index.html', meta);
  };

  iterator = function(item, cwd) {
    var i, key, title, x, _results;
    if (typeof item === 'object') {
      _results = [];
      for (key in item) {
        i = item[key];
        fs.mkdir(cwd + '/' + key);
        cwd = cwd + '/' + key;
        title = titleCase(key);
        writeIndex(cwd, title);
        _results.push((function() {
          var _i, _len, _results1;
          _results1 = [];
          for (_i = 0, _len = i.length; _i < _len; _i++) {
            x = i[_i];
            _results1.push(iterator(x, cwd));
          }
          return _results1;
        })());
      }
      return _results;
    } else if (typeof item === 'string') {
      fs.mkdir(cwd + '/' + item);
      cwd = cwd + '/' + item;
      title = titleCase(item);
      return writeIndex(cwd, title);
    }
  };

  x = yml.load(getFileAsString(nav));

  x = x['main'];

  for (key in x) {
    item = x[key];
    iterator(x[key], src);
  }

}).call(this);
